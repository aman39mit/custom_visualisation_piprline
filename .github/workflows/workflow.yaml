name: custom viz
on:  
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-publish:
    name: Build and Publish Nerdpack
    runs-on: ubuntu-latest
    steps:
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0

      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
       
      - name: Install NR1 CLI
        run: |
          curl -s https://cli.nr-ext.net/installer.sh | sudo bash

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Configure NR1 CLI API key
        run: nr1 profiles:add --name account-slug --api-key ${{secrets.NEW_RELIC_API_KEY}} --region us 

      # - name: Get Package Version
      #   id: get-version
      #   run: |
      #     PACKAGE_VERSION=$(cat package.json | jq -r .version)
      #     echo $PACKAGE_VERSION

      - name: Update Nerdpack Version
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          echo $CURRENT_VERSION
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo $NEW_VERSION
          jq --arg new_version "$NEW_VERSION" '.version = $new_version' package.json > tmp.json && mv tmp.json package.json
          

        # PACKAGE_VERSION=$(cat package.json | jq -r .version)
        # echo $PACKAGE_VERSION
        # NEW_VERSION=$(echo "$PACKAGE_VERSION" | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        # echo "Updating Nerdpack version to $NEW_VERSION"
        # jq --arg new_version "$NEW_VERSION" '.version = $new_version' package.json > tmp.json
        # mv tmp.json package.json
        # run: npm version patch -m "Bump version to %s"
      
      - name: Publish Nerdpack
        run: nr1 nerdpack:publish
      
      - name: Subscribe Nerdpack
        run: nr1 nerdpack:subscribe